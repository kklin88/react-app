{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport TimelineItemList from './TimelineItemList';\nimport TimelineItem from './TimelineItem';\nimport warning from '../_util/warning';\nimport useItems from './useItems';\n// CSSINJS\nimport useStyle from './style';\nconst Timeline = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      children,\n      items\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"children\", \"items\"]);\n  const prefixCls = getPrefixCls('timeline', customizePrefixCls);\n  // =================== Warning =====================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children, 'Timeline', '`Timeline.Item` is deprecated. Please use `items` instead.') : void 0;\n  }\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergedItems = useItems(items, children);\n  return wrapSSR( /*#__PURE__*/React.createElement(TimelineItemList, Object.assign({}, restProps, {\n    prefixCls: prefixCls,\n    direction: direction,\n    items: mergedItems,\n    hashId: hashId\n  })));\n};\nTimeline.Item = TimelineItem;\nif (process.env.NODE_ENV !== 'production') {\n  Timeline.displayName = 'Timeline';\n}\nexport default Timeline;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}